<?xml version="1.0"?>
<launch>  		 
	 
	<arg name="finger_id" default="$(optenv FINGER_ID 3)"/>
  
	<!-- Load robot description to parameter server -->
	<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find kuka_robot_bringup)/robot/kr120toolv$(arg finger_id).xacro'"/>

	<!-- tool -->
	<arg name="tool_ns" default="$(optenv TOOL_ID kuka_tool)"/>
	
	<group ns="$(arg tool_ns)">
	
		<!-- start robotnik_base_hw -->
		<include file="$(find robotnik_base_hw)/launch/robotnik_base_hw.launch"/>
	
		<!-- start kuka_control -->
		<include file="$(find kuka_tool_control)/launch/kuka_tool_control.launch"/>
	
	</group>
	
	<!-- merge the robot_ns/joint_states and tool_ns/joint_states into /joint_states -->
	<node name="robot_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
		<rosparam param="source_list">["kuka_robot/joint_states","kuka_tool/joint_states"]</rosparam> 
	</node>
	
	<!-- robot_state_publisher -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	
	<!-- TODO: este nodo puede que deba estar dentro del grupo de la tool -->
	<node name="kuka_tool_finger_node" pkg="kuka_tool_finger" type="kuka_tool_finger_node" output="screen">
		<rosparam command="load" file="$(find kuka_tool_finger)/config/kuka_tool_finger_node.yaml" />
	</node>
	
	
	<!-- launch tf of cameras -->
	<node pkg="tf" type="static_transform_publisher" name="camera1_tf_broadcaster" args="2.38483081907 0.0874564851148 1.63336872662 -0.602294145977 -0.752529155135 0.200076434884 0.175815393517 /base_link /camera1_color_optical_frame 1000" />
	<node pkg="tf" type="static_transform_publisher" name="camera2_tf_broadcaster" args="0.0586469641498 2.50897768642 1.55808801734 -0.0940746136031 -0.963091065974 0.248647589013 0.0421893611542 /base_link /camera2_color_optical_frame 1000" />
		
	
</launch>
